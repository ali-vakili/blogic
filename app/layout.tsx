import localFont from "next/font/local";
import Navbar from "@/components/Navbar";
import TanStackProvider from "@/provider/TanStackProvider";
import { openGraphImages, twitterImages } from "./shared-metadata";

import { Roboto } from "next/font/google";
import type { Metadata } from "next";
import type { Viewport } from "next";

import "./globals.css";

const roboto = Roboto({
  subsets: ["latin"],
  weight: ["100", "300", "400", "500", "700", "900"],
  variable: "--roboto",
});

const iranyekan = localFont({
  variable: "--font-iranyekan",
  src: [
    {
      path: "./fonts/iranyekan/iranyekanweblight(fanum).woff2",
      weight: "300",
    },
    {
      path: "./fonts/iranyekan/iranyekanwebregular(fanum).woff2",
      weight: "400",
    },
    {
      path: "./fonts/iranyekan/iranyekanwebbold(fanum).woff2",
      weight: "700",
    },
  ],
  display: "swap",
});

const iransans = localFont({
  variable: "--font-iransans",
  src: [
    {
      path: "./fonts/iransans/IRANSans_Light.ttf",
      weight: "300",
    },
    {
      path: "./fonts/iransans/IRANSans.ttf",
      weight: "400",
    },
    {
      path: "./fonts/iransans/IRANSans_Medium.ttf",
      weight: "500",
    },
    {
      path: "./fonts/iransans/IRANSans_Bold.ttf",
      weight: "700",
    },
  ],
  display: "swap",
});

export const metadata: Metadata = {
  title: {
    default: "بلاگیک",
    template: `%s | بلاگیک`,
  },
  description: "Generated by create next app",
  metadataBase:
    process.env.NODE_ENV === "production"
      ? new URL(
          process.env.NEXT_PUBLIC_NEXT_PRODUCTION_URL ||
            "https://blogic.vercel.app"
        )
      : new URL(
          process.env.NEXT_PUBLIC_NEXT_DEV_URL || "http://localhost:3000"
        ),
  alternates: {
    canonical: "/",
    languages: {
      "fa-IR": "/fa-IR",
    },
  },
  keywords: ["بلاگیک"],
  robots: {
    index: true,
    follow: true,
    nocache: true,
    googleBot: { index: true, follow: false, noimageindex: true },
  },
  openGraph: {
    ...openGraphImages,
  },
  twitter: {
    ...twitterImages,
  },
  icons: {
    shortcut: { url: "/favicon.ico", type: "image/x-icon" },
    icon: [
      { url: "/favicon.ico", type: "image/x-icon" },
      { url: "/favicon-16x16.png", type: "image/png", sizes: "16x16" },
      { url: "/favicon-32x32.png", type: "image/png", sizes: "32x32" },
      {
        url: "/android-chrome-192x192.png",
        type: "image/png",
        sizes: "192x192",
      },
    ],
    apple: [{ url: "/apple-touch-icon.png", type: "image/png" }],
  },
};

export const viewport: Viewport = {
  themeColor: "#FAFAFA",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="fa-IR" dir="rtl">
      <body
        className={`${roboto.variable} ${iranyekan.variable} ${iransans.variable}`}
      >
        <TanStackProvider>
          <Navbar />
          {children}
        </TanStackProvider>
      </body>
    </html>
  );
}
